version: "3.8"

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      PORT: 3000
      MYSQL_HOST: mysql
      MYSQL_USER: root
      MYSQL_PASSWORD: yourpassword
      MYSQL_DATABASE: exampledb
      REDIS_HOST: redis
      REDIS_PORT: 6379
      MONGODB_URI: mongodb://mongodb:27018/viva?replicaSet=rs0
    depends_on:
      - mysql
      - redis
      - mongodb

  mysql:
    image: mysql:8
    environment:
      MYSQL_ROOT_PASSWORD: yourpassword
      MYSQL_DATABASE: exampledb
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  mongodb:
    image: mongo:latest
    command: ["--replSet", "rs0", "--bind_ip_all"]
    ports:
      - "27018:27017"
    volumes:
      - mongodb_data:/data/db
    healthcheck:
      test: mongosh --eval "rs.status()"
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 20s

  mongo-init:
    image: mongo:latest
    depends_on:
      mongodb:
        condition: service_healthy
    command: >
      mongosh --host mongodb:27017 --eval '
        rs.initiate({
          _id: "rs0",
          members: [{ _id: 0, host: "mongodb:27017" }]
        })
      '

volumes:
  mysql_data:
  redis_data:
  mongodb_data:
